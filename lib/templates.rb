class Templates
	attr_reader :metadata, :root_dir
	
	def initialize(root_dir, metadata)
    @root_dir = root_dir
    @partials_path = "scripts/generate/templates/_partials"
    @metadata = metadata
  end

	def render(template_path, template_binding=nil)
		old_template_path = @_template_path
    template_binding = binding if template_binding.nil?
    content = File.read("#{root_dir}/#{template_path}.erb")
    renderer = ERB.new(content, nil, '-')
    content =
      begin
        @_template_path = "#{root_dir}/#{template_path}"
        renderer.result(template_binding)
      rescue Exception => e
        raise(
          <<~EOF
          Error rendering template!

            #{root_dir.gsub(/#{ROOT_DIR}/, "")}/#{template_path}.erb

          Error:

            #{e.message}

          #{e.backtrace.join("\n").indent(2)}
          EOF
        )
      ensure
        @_template_path = old_template_path
      end

    if template_path.end_with?(".md") && !partial?(template_path)
      notice =
        <<~EOF

        <!--
             THIS FILE IS AUTOGENERATED!

             To make changes please edit the template located at:

             #{template_path}.erb
        -->
        EOF

      content.sub!(/\n## /, "#{notice}\n## ")
    end

    content
	end
end