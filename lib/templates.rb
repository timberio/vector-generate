require_relative "templates/component_helpers"
require_relative "templates/config_helpers"
require_relative "templates/event_helpers"
require_relative "templates/fields_helpers"
require_relative "templates/guide_helpers"
require_relative "templates/highlight_helpers"
require_relative "templates/installation_helpers"
require_relative "templates/interface_helpers"
require_relative "templates/option_helpers"
require_relative "templates/release_helpers"
require_relative "templates/util_helpers"

class Templates
	include ComponentHelpers
	include ConfigHelpers
	include EventHelpers
	include FieldsHelpers
	include GuideHelpers
	include HighlightHelpers
	include InstallationHelpers
	include InterfaceHelpers
	include OptionHelpers
	include ReleaseHelpers
	include UtilHelpers

	attr_reader :metadata, :partials_path

	def initialize(metadata)
    @partials_path = "templates/_partials"
    @metadata = metadata
  end

  def partial?(template_path)
    basename = File.basename(template_path)
    basename.start_with?("_")
  end

	def render(template_path, template_binding=nil)
		old_template_path = @_template_path
    template_binding = binding if template_binding.nil?
    template_path = template_path.end_with?(".erb") ? template_path : "#{template_path}.erb"
    content = File.read(template_path)
    renderer = ERB.new(content, nil, '-')
    content =
      begin
        @_template_path = template_path
        renderer.result(template_binding)
      rescue Exception => e
        raise(
          <<~EOF
          Error rendering template!

            #{template_path}

          Error:

            #{e.message}

          #{e.backtrace.join("\n").indent(2)}
          EOF
        )
      ensure
        @_template_path = old_template_path
      end

    if template_path.end_with?(".md") && !partial?(template_path)
      notice =
        <<~EOF

        <!--
             THIS FILE IS AUTOGENERATED!

             To make changes please edit the template located at:

             #{template_path}.erb
        -->
        EOF

      content.sub!(/\n## /, "#{notice}\n## ")
    end

    content
	end
end